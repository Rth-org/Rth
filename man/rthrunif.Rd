% Generated by roxygen2 (4.0.2): do not edit by hand
\name{rthrunif}
\alias{rthrunif}
\title{Parallel Random Uniform Generation}
\usage{
rthrunif(n, min = 0, max = 1, seed = rth.getseed(),
  nthreads = rth.nthreads())
}
\arguments{
\item{n}{The number of values to generate}

\item{min,max}{Parameters for uniform random variables.}

\item{seed}{Seed for the random number generation.}

\item{nthreads}{An optional argument for specifying the number of threads
(in the case of OpenMP or TBB backends) that the routine should (at most)
use.  Does nothing with a CUDA backend.  See \link{nthreads}.}
}
\description{
Generate from a uniform distribution in parallel.
}
\details{
\code{rthrunif()} uses thrust's implementation of the minimal standard
random number generation algorithm.  The way seeds for threads are chosen at
the moment does not guarantee independence of the RNG streams.
}
\references{
\url{https://thrust.github.io/doc/group__predefined__random.html}
}

